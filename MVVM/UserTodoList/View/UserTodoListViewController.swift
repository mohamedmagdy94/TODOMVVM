//
//  UserTodoListViewController.swift
//  VIP
//
//  Created by Mohamed El-Taweel on 9/2/20.
//  Copyright (c) 2020 Learning. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import KRProgressHUD
import RxSwift

class UserTodoListViewController: UIViewController
{
    
    @IBOutlet weak var userTodoTableView: UITableView!
    
    var userId: Int?
    private var viewModel: UserTodoListViewModel?
    private var disposeBag = DisposeBag()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setup()
    }
    
    private func setup(){
        guard let userId = userId else{ return }
        viewModel = UserTodoListViewModel(userId: userId)
        setupRx()
        viewModel?.getTodoList()
    }
    
    private func setupRx(){
        guard let viewModel = viewModel else{ return }
        viewModel
            .todos
            .bind(to: userTodoTableView.rx.items(cellIdentifier: UserTodoTableViewCell.IDENTIFIER, cellType: UserTodoTableViewCell.self)) {(row, element, cell) in
                cell.config(with: element)
        }
        .disposed(by: disposeBag)
        viewModel
            .shouldShowErrorMessage
            .subscribe(onNext: { KRProgressHUD.showError(withMessage: $0) })
            .disposed(by: disposeBag)
        
        viewModel
            .shouldShowLoading
            .subscribe(onNext: handleLoadingIndicator(with:))
            .disposed(by: disposeBag)
    }
    
    private func handleLoadingIndicator(with flag: Bool){
        if flag{
            KRProgressHUD.show()
        }else{
            KRProgressHUD.dismiss()
        }
    }
    
}

